cost_test_1 = zeros(20)
cost_test_2 = zeros(20)
revenue_test = zeros(20)

dailyWeight = [ 28.5552,
                35.1317,
                12.3149,
                43.5309,
                16.8821,
                15.9505,
                20.5205,
                20.2026,
                59.1611,
                61.1887,
                40.2693,
                11.2924]
dailyWeight = repeat(dailyWeight,4)
priceProjection = [18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 47.3333, 47.3333, 47.3333, 47.3333, 47.3333, 47.3333, 47.3333, 47.3333, 47.3333, 47.3333, 47.3333, 47.3333, 2047.71, 47.3333, 47.3333, 47.3333, 47.3333, 47.3333, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 9.88235, 9.88235, 9.88235, 18.5238, 9.88235, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 47.3333, 47.3333, 47.3333, 47.3333, 47.3333, 47.3333, 18.5238, 18.5238, 18.5238, 18.5238, 47.3333, 47.3333, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 9.88235, 9.88235, 9.88235, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 47.3333, 47.3333, 47.3333, 47.3333, 47.3333, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 18.5238, 18.5238, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 18.5238, 17.1434, 9.88235, 9.88235, 9.88235, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 9.88235, 9.88235, 9.88235, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 41.7273, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 47.3333, 47.3333, 47.3333, 47.3333, 47.3333, 47.3333, 47.3333, 47.3333, 47.3333, 47.3333, 47.3333, 47.3333, 2047.71, 47.3333, 47.3333, 47.3333, 47.3333, 47.3333, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 9.88235, 9.88235, 9.88235, 18.5238, 9.88235, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 47.3333, 47.3333, 47.3333, 47.3333, 47.3333, 47.3333, 18.5238, 18.5238, 18.5238, 18.5238, 47.3333, 47.3333, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 9.88235, 9.88235, 9.88235, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 47.3333, 47.3333, 47.3333, 47.3333, 47.3333, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 18.5238, 18.5238, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 18.5238, 17.1434, 9.88235, 9.88235, 9.88235, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 9.88235, 9.88235, 9.88235, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 41.7273, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 47.3333, 47.3333, 47.3333, 47.3333, 47.3333, 47.3333, 47.3333, 47.3333, 47.3333, 47.3333, 47.3333, 47.3333, 2047.71, 47.3333, 47.3333, 47.3333, 47.3333, 47.3333, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 9.88235, 9.88235, 9.88235, 18.5238, 9.88235, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 47.3333, 47.3333, 47.3333, 47.3333, 47.3333, 47.3333, 18.5238, 18.5238, 18.5238, 18.5238, 47.3333, 47.3333, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 9.88235, 9.88235, 9.88235, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 47.3333, 47.3333, 47.3333, 47.3333, 47.3333, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 18.5238, 18.5238, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 18.5238, 17.1434, 9.88235, 9.88235, 9.88235, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 9.88235, 9.88235, 9.88235, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 41.7273, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 47.3333, 47.3333, 47.3333, 47.3333, 47.3333, 47.3333, 47.3333, 47.3333, 47.3333, 47.3333, 47.3333, 47.3333, 2047.71, 47.3333, 47.3333, 47.3333, 47.3333, 47.3333, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 9.88235, 9.88235, 9.88235, 18.5238, 9.88235, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 47.3333, 47.3333, 47.3333, 47.3333, 47.3333, 47.3333, 18.5238, 18.5238, 18.5238, 18.5238, 47.3333, 47.3333, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 9.88235, 9.88235, 9.88235, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 47.3333, 47.3333, 47.3333, 47.3333, 47.3333, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 18.5238, 18.5238, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 18.5238, 17.1434, 9.88235, 9.88235, 9.88235, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 9.88235, 9.88235, 9.88235, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 41.7273, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238]

priceProjection_noInv = [18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 47.3333, 47.3333, 47.3333, 47.3333, 47.3333, 47.3333, 47.3333, 47.3333, 47.3333, 47.3333, 47.3333, 47.3333, 2047.71, 47.3333, 47.3333, 47.3333, 47.3333, 47.3333, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 47.3333, 47.3333, 47.3333, 47.3333, 47.3333, 47.3333, 18.5238, 18.5238, 18.5238, 18.5238, 47.3333, 47.3333, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 9.88235, 9.88235, 9.88235, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 47.3333, 47.3333, 47.3333, 47.3333, 47.3333, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 18.5238, 18.5238, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 18.5238, 9.88235, 9.88235, 9.88235, 9.88235, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 9.88235, 9.88235, 9.88235, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 41.7273, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 47.3333, 47.3333, 47.3333, 47.3333, 47.3333, 47.3333, 47.3333, 47.3333, 47.3333, 47.3333, 47.3333, 47.3333, 2047.71, 47.3333, 47.3333, 47.3333, 47.3333, 47.3333, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 9.88235, 9.88235, 9.88235, 18.5238, 9.88235, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 47.3333, 47.3333, 47.3333, 47.3333, 47.3333, 47.3333, 18.5238, 18.5238, 18.5238, 18.5238, 47.3333, 47.3333, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 9.88235, 9.88235, 9.88235, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 47.3333, 47.3333, 47.3333, 47.3333, 47.3333, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 18.5238, 18.5238, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 18.5238, 17.1434, 9.88235, 9.88235, 9.88235, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 9.88235, 9.88235, 9.88235, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 41.7273, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 47.3333, 47.3333, 47.3333, 47.3333, 47.3333, 47.3333, 47.3333, 47.3333, 47.3333, 47.3333, 47.3333, 47.3333, 2047.71, 47.3333, 47.3333, 47.3333, 47.3333, 47.3333, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 9.88235, 9.88235, 9.88235, 18.5238, 9.88235, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 47.3333, 47.3333, 47.3333, 47.3333, 47.3333, 47.3333, 18.5238, 18.5238, 18.5238, 18.5238, 47.3333, 47.3333, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 9.88235, 9.88235, 9.88235, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 47.3333, 47.3333, 47.3333, 47.3333, 47.3333, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 18.5238, 18.5238, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 18.5238, 17.1434, 9.88235, 9.88235, 9.88235, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 9.88235, 9.88235, 9.88235, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 41.7273, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 47.3333, 47.3333, 47.3333, 47.3333, 47.3333, 47.3333, 47.3333, 47.3333, 47.3333, 47.3333, 47.3333, 47.3333, 2047.71, 47.3333, 47.3333, 47.3333, 47.3333, 47.3333, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 9.88235, 9.88235, 9.88235, 18.5238, 9.88235, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 47.3333, 47.3333, 47.3333, 47.3333, 47.3333, 47.3333, 18.5238, 18.5238, 18.5238, 18.5238, 47.3333, 47.3333, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 9.88235, 9.88235, 9.88235, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 47.3333, 47.3333, 47.3333, 47.3333, 47.3333, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 18.5238, 18.5238, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 18.5238, 17.1434, 9.88235, 9.88235, 9.88235, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 9.88235, 9.88235, 9.88235, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 41.7273, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 9.88235, 9.88235, 9.88235, 9.88235, 9.88235, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238, 18.5238]

techNum = 1
variable_cost_test = technologyPool[techNum].economicProperties.VOMCost + technologyPool[techNum].economicProperties.fuelCost
fixed_cost_test = (technologyPool[techNum].economicProperties.FOMCost + technologyPool[techNum].economicProperties.yearlyInstallment)/technologyPool[techNum].designProperties.unitCapacity
representativeDayWeightFactors = systemSettings.simulationSettings.representativeData[:Weights][:,2]
representative_day = systemSettings.simulationSettings.year2day
representative_hour = systemSettings.simulationSettings.day2hour
dailyWeight = repeat(representativeDayWeightFactors,Int(technologyPool[techNum].designProperties.lifeTime/systemSettings.milestoneYear))


for hour in 1:length(priceProjection)
    thisWeightDay = dailyWeight[Int(ceil(hour/24))]
    thisYearStart = (Int(ceil(hour/representative_day/representative_hour))-1) * systemSettings.milestoneYear + 1
    thisYearEnd = Int(ceil(hour/representative_day/representative_hour))*systemSettings.milestoneYear
    if hour % (representative_day*representative_hour) == 0
        cost_test_1[thisYearStart:thisYearEnd] .+= repeat([fixed_cost_test],systemSettings.milestoneYear)
    end
    cost_test_2[thisYearStart:thisYearEnd] .+= repeat([fixed_cost_test/8760*thisWeightDay],systemSettings.milestoneYear)
    thisPrice = priceProjection[hour]
    if variable_cost_test <= thisPrice
        cost_test_1[thisYearStart:thisYearEnd] .+= repeat([variable_cost_test *  thisWeightDay],systemSettings.milestoneYear)
        cost_test_2[thisYearStart:thisYearEnd] .+= repeat([variable_cost_test *  thisWeightDay],systemSettings.milestoneYear)
        revenue_test[thisYearStart:thisYearEnd] .+= repeat([thisPrice *  thisWeightDay],systemSettings.milestoneYear)
    end

end

yearVector = collect(0:1:19)
lifeDiscountVector = exp.(-0.05 .* yearVector)
println(cost_test_1)
println(cost_test_2)
println(revenue_test)
println((revenue_test - cost_test_1)' * yearVector )
println((revenue_test - cost_test_2)' * yearVector )
#sum_cost_test_1 = cost_test_1'*lifeDiscountVector
#sum_cost_test_2 = cost_test_2'*lifeDiscountVector
markupPercent = [1.2, 1.175,1.12, 1.055,1.05, 1.13,1.17,1.168,1.172, 1.175,1.185,1.18,1.19,1.175,1.165,1.145,1.15,1.175,1.205,1.20,1.21,1.18,1.2,1.2] .- 1
PyPlot.plot(markupPercent * 100, color = "blue", label = "Markup percentage")
PyPlot.ylabel("Markup percentage [%]", fontsize = 16)
PyPlot.xlabel("Time in a day [hour]", fontsize = 16)
PyPlot.xticks(fontsize = 16)
PyPlot.yticks(fontsize = 16)
#PyPlot.plot(priceProjection_noInv, color = "orange", label = "No Investment")
PyPlot.legend(loc = 2, fontsize = 16)
function CalculateAverageLoad(representativeData)
    averageLoad = zeros(24)
    for day in 1:12
        averageLoad .+= representativeData[:Load][day,:] .* representativeData[:Weights][day,2]/365
    end
    return averageLoad
end

PyPlot.twinx()

#PyPlot.plot(repeat(vec(representativeData[:Load]'),4)[1:24], color = "red", label = "Load")
PyPlot.plot(CalculateAverageLoad(representativeData), color = "red", label = "Average Load")
PyPlot.ylabel("Load [MW]", fontsize = 16)
PyPlot.xlabel("Time in a day [hour]", fontsize = 16)
PyPlot.xticks(fontsize = 16)
PyPlot.yticks(fontsize = 16)
PyPlot.grid(true)
PyPlot.legend(loc = "best", fontsize = 16)

fig, axes = subplots()
#fig.suptitle(title_sup)
ax = axes
ax.set_title("Price duration curve")
ax.set_xlabel("Markup Percentage [%]")
y1 = priceProjection
x1 = (systemSettings.simulationSettings.representativeData[:Weights][:,2] * ones(1, 24))'[:] / 8760 * 100.
x1 = repeat(x1,4)/4
df2 = sort(DataFrame(x1=x1, y1=y1, legend="reduced"), [:y1], rev=true)
df2[:x1] = cumsum(df2[:x1])

divider = axes_grid1.make_axes_locatable(ax)
ax2 = divider.new_vertical(size="100%", pad=0.1)
fig.add_axes(ax2)

ax.plot(df2.x1, df2.y1)
#thisTechnologyMarginalCost = technologyPool[techNum].economicProperties.VOMCost + technologyPool[techNum].economicProperties.fuelCost
ax.plot(df2.x1,  variable_cost_test* ones(length(df2.x1),1),color = "blue", linestyle = "dashed",label = "Marginal Cost")
ax.set_ylim(0, 50)
ax.spines["top"].set_visible(false)
ax.grid(true)

ax2.set_ylabel("Price [€/MWh]")

ax2.set_title("Price duration curve")
ax2.plot(df2.x1, df2.y1, label = "Price duration curve")
ax2.plot(df2.x1,  variable_cost_test* ones(length(df2.x1),1),color = "blue", linestyle = "dashed",label = "Marginal Cost")

ax2.set_ylim(100, 3050)
ax2.tick_params(bottom="off", labelbottom="off")
ax2.spines["bottom"].set_visible(false)
ax.grid(true)
ax2.grid(true)
ax2.legend(loc = 2)

for hour in 1:288*4
    thisDayHour = 1.2
    if hour%24 == 0
        thisDayHour = 24
    else
        thisDayHour = hour%24
    end
    println(thisDayHour)
end

function func(a;kwargs...)
 V = Dict(kwargs)
 println(V)
end
c = 0
b = func(1;c = c)


function eng_notation(num::Number; digits=4, spec="E", plus_sign=false)
    # Complex subtypes are just passed through unchanged.
    if typeof(num) <: Complex; return num; end
    # Values larger/smaller that Float64 limits just pass through unchanged.
    if abs(num) > floatmax(Float64); return num; end # max=1.7976931348623157e308
    if abs(num) < floatmin(Float64) && num != 0; return num; end # min=2.2250738585072014e-308
    # Min of 0 and max of 13 digits after the decimal point (dp).
    digits = digits < 0 ? 0 : digits
    digits = digits > 13 ? 13 : digits
    # Don't add a dp when 0 digits after dp.
    dec_pt = digits == 0 ? "" : "."
    spec_char = spec[1] == 'E' ? 'E' : 'e'
    sign = ifelse(num < 0, "-", ifelse(plus_sign, "+", ""))

    # This Julia code is modified from Java code at:
    # http://www.labbookpages.co.uk/software/java/engNotation.html
    # If the value is zero, then simply return 0 with the correct number of digits.
    if num == 0; return string(sign, 0, dec_pt, "0"^digits, spec_char, "+00"); end
    # If the value is negative, make it positive so the log10 works
    pos_num = num < 0 ? -num : num
    log10_num = log10(pos_num);
    # Determine how many orders of 3 magnitudes the value is.
    count = floor(log10_num/3);
    # Scale num into the range 1 <= num < 1000.
    val = num/10.0^(3count)

    if digits == 0
        val_int = Int(round(val, digits=0))
    else
        val_int = Int(trunc(val))
    end
    n_val_digits = length(string(val_int))
    n_val_digits = ifelse(val_int < 0, n_val_digits-1, n_val_digits) # Account for - sign
    # Determine fractional digits to requested number of digits.
    # Use 15 below because 1 + 15 = 16, and 16 sigdigits is around the limit of Float64.
    num_str = @sprintf "%+.15e" num
    # Remove sign and decimal pt.
    digits_str = replace(num_str[2:end], "." => "")
    e_index = findlast("e", digits_str).start
    # Remove exponent.
    digits_str = digits_str[1:e_index-1]
    # Jump over leading digits to get digits to right of dec pt.
    frac_digits = digits_str[n_val_digits+1:end]
    if digits == 0
        frac_digits = ""
    else
        frac_digits = string(Int(round(parse(Int, frac_digits), sigdigits=digits)))
        # Round may not give us digits zeros, so we just pad to the right.
        frac_digits = rpad(frac_digits, digits, "0")
        frac_digits = frac_digits[1:digits]
    end
    # Determine the scaled exponent and pad with zeros for small exponents.
    exp = Int(3count)
    exp_sign = exp >= 0 ? "+" : "-"
    exp_digits = lpad(abs(exp), 2, "0")
    return string(sign, abs(val_int), dec_pt, frac_digits, spec_char, exp_sign, exp_digits)
end # eng_notation()
